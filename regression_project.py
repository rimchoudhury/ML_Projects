# -*- coding: utf-8 -*-
"""Regression_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BQOKR_LzwpHEUoc5UbVu0ywmbJg8RDsP
"""

#IMPORTING DEPENDENCIES

import numpy as np
import pandas as pd 
from matplotlib import pyplot as plt
from sklearn.datasets import load_boston

# UNDERSTANDING THE DATASET

boston = load_boston()
print(boston.DESCR)

# ACCESS DATA ATTRIBUTES

dataset = boston.data
for name,index in enumerate(boston.feature_names):
  print(index,name)

# RESHAPING THE SIZE

data= dataset[:,12].reshape(-1,1)

# SHAPE OF THE DATA

np.shape(dataset)

# TARGET VALUES

target = boston.target.reshape(-1,1)

# SHAPE OF THE TARGET
np.shape(target)

# Commented out IPython magic to ensure Python compatibility.
# ENSURING THAT MATPLOTLIB IS WORKING INSIDE THE NOTEBOOK
# %matplotlib inline
plt.scatter(data,target,color='green')
plt.xlabel('Lower Income Population')
plt.ylabel('Cost of House')
plt.show()

# LINEAR REGRESSION
from sklearn.linear_model import LinearRegression #Lasso,Ridge

# CREATING A REGRESSION MODEL
reg= LinearRegression()

# FIT THE MODEL
reg.fit(data,target)

# PREDICTION
pred= reg.predict(data)

# Commented out IPython magic to ensure Python compatibility.
# ENSURING THAT MATPLOTLIB IS WORKING INSIDE THE NOTEBOOK
# %matplotlib inline
plt.scatter(data,target,color='red')
plt.xlabel('Lower Income Population')
plt.ylabel('Cost of House')
plt.show()

# Commented out IPython magic to ensure Python compatibility.
# ENSURING THAT MATPLOTLIB IS WORKING INSIDE THE NOTEBOOK
# %matplotlib inline
plt.scatter(data,target,color='red')
plt.plot(data,pred,color='green')
plt.xlabel('Lower Income Population')
plt.ylabel('Cost of House')
plt.show()

# CIRCUMVENTING CURVE ISSUE USING POLYNOMIAL MODEL
from sklearn.preprocessing import PolynomialFeatures

# TO ALLOW MERGING OF MODELS
from sklearn.pipeline import make_pipeline

model= make_pipeline(PolynomialFeatures(4),reg)

model.fit(data,target)

pred= model.predict(data)

# Commented out IPython magic to ensure Python compatibility.
# ENSURING THAT MATPLOTLIB IS WORKING INSIDE THE NOTEBOOK
# %matplotlib inline
plt.scatter(data,target,color='red')
plt.plot(data,pred,color='green')
plt.xlabel('Lower Income Population')
plt.ylabel('Cost of House')
plt.show()

# r_2 metric
from sklearn.metrics import r2_score

#  PREDICT
r2_score(pred,target)